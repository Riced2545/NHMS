import React, { useEffect, useState } from "react";
import axios from "axios";
import Navbar from "../../components/Sidebar";
import { useNavigate } from "react-router-dom";
import "./index.css";
import "../../components/Search/Search.css";
import "../../pages/dashboard/Dashboard.css";
import PDFDownload from "./PDF/pdf.jsx";

const COLORS = ['#4CAF50', '#F44336'];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô
const getHomeTypeIcon = (homeTypeName) => {
  switch(homeTypeName) {
    case '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î':
      return "üèòÔ∏è";
    case '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß':
      return "üè†";
    case '‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£':
      return "üè¢";
    case '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á':
      return "üè°";
    default:
      return "üèóÔ∏è";
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏µ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
const getCardColor = (homeTypeName, index) => {
  const colors = [
    { bg: "#e0f2fe", border: "#0ea5e9", text: "#0369a1" },
    { bg: "#ecfdf5", border: "#10b981", text: "#047857" },
    { bg: "#fef3c7", border: "#f59e0b", text: "#d97706" },
    { bg: "#fce7f3", border: "#ec4899", text: "#be185d" },
    { bg: "#ede9fe", border: "#8b5cf6", text: "#7c3aed" },
  ];
  return colors[index % colors.length];
};

export default function TypePage() {
  const [homeTypes, setHomeTypes] = useState([]); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å typeStats ‡πÄ‡∏õ‡πá‡∏ô homeTypes
  const [typeStats, setTypeStats] = useState([]);
  const [houseStatus, setHouseStatus] = useState({ vacant: 0, occupied: 0 });
  const [detailData, setDetailData] = useState([]);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    setLoading(true);
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô‡∏à‡∏≤‡∏Å API
    Promise.all([
      axios.get("http://localhost:3001/api/home_types"),
      axios.get("http://localhost:3001/api/homes"),
      axios.get("http://localhost:3001/api/guests")
    ])
      .then(([homeTypesRes, homesRes, guestsRes]) => {
        console.log('Home Types API Response:', homeTypesRes.data);
        console.log('Homes API Response:', homesRes.data);
        console.log('Guests API Response:', guestsRes.data);
        
        const homeTypesData = homeTypesRes.data;
        const homes = homesRes.data;
        const guests = guestsRes.data;
        
        setHomeTypes(homeTypesData);
        
        // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô
        const stats = {};
        homes.forEach(h => {
          const type = (h.hType || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏").trim();
          if (!stats[type]) stats[type] = 0;
          stats[type]++;
        });

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á typeStats ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• homeTypes ‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
        const typeStatsArr = homeTypesData.map(homeType => ({
          id: homeType.id,
          type: homeType.name,
          description: homeType.description,
          count: stats[homeType.name] || 0,
          max_capacity: homeType.max_capacity,
          is_row_type: homeType.is_row_type
        }));
        
        setTypeStats(typeStatsArr);

        // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏≠‡∏¢‡∏π
        const vacant = homes.filter(h => h.status_id === 2).length;
        const occupied = homes.filter(h => h.status_id === 1).length;
        setHouseStatus({ vacant, occupied });

        // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢
        const processedDetailData = homes.map(house => {
          const houseGuests = guests.filter(guest => guest.home_id === house.home_id);
          
          if (houseGuests.length > 0) {
            const primaryGuest = houseGuests[0];
            return {
              hNumber: house.Address || '-',
              hType: house.hType || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
              fname: primaryGuest.rank || '',
              lname: `${primaryGuest.name || ''} ${primaryGuest.lname || ''}`.trim(),
              phone: primaryGuest.phone || '-',
              status_id: house.status_id,
              guest_count: houseGuests.length
            };
          } else {
            return {
              hNumber: house.Address || '-',
              hType: house.hType || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
              fname: '',
              lname: '',
              phone: '-',
              status_id: house.status_id,
              guest_count: 0
            };
          }
        });

        setDetailData(processedDetailData);
        console.log('Processed Detail Data:', processedDetailData);
      })
      .catch(error => {
        console.error('Error fetching data:', error);
        
        // ‡∏ñ‡πâ‡∏≤ API ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        const mockHomeTypes = [
          { id: 1, name: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß', description: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß', max_capacity: 6, is_row_type: true },
          { id: 2, name: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î', description: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏ù‡∏î', max_capacity: 6, is_row_type: false },
          { id: 3, name: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á', description: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á', max_capacity: 6, is_row_type: false },
          { id: 4, name: '‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£', description: '‡πÅ‡∏ü‡∏•‡∏ï‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£', max_capacity: 6, is_row_type: false }
        ];
        
        setHomeTypes(mockHomeTypes);
        
        const mockTypeStats = mockHomeTypes.map(type => ({ 
          ...type,
          count: Math.floor(Math.random() * 10) + 1 
        }));
        setTypeStats(mockTypeStats);
        setHouseStatus({ vacant: 5, occupied: 15 });
        
        const mockDetailData = [
          { hNumber: '504/29', hType: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß', fname: '‡∏£.‡∏≠.‡∏´‡∏ç‡∏¥‡∏á', lname: '‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏£‡∏£‡∏ì ‡∏Ç‡∏¥‡πà‡∏ô‡∏¢‡∏≤‡∏¢', phone: '094-956-4888' },
          { hNumber: '504/30', hType: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß', fname: '‡∏ô.‡∏ó.', lname: '‡∏Å‡∏§‡∏©‡∏è‡∏¥‡πå ‡∏ß‡∏±‡∏í‡∏ô‡∏Å‡∏¥‡∏à‡∏≠‡∏ô‡∏≤‡∏ñ‡∏≤', phone: '086-046-4441' },
          { hNumber: '504/31', hType: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß', fname: '‡∏ô.‡∏≠.', lname: '‡∏™‡∏°‡∏û‡∏£ ‡∏¢‡∏¥‡πà‡∏á‡∏á‡∏≤‡∏°‡πÅ‡∏Å‡πâ‡∏ß', phone: '083-925-4775' },
          { hNumber: '505/01', hType: '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á', fname: '', lname: '', phone: '-' },
          { hNumber: '506/101', hType: '‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£', fname: '‡∏ô‡∏≤‡∏¢', lname: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á', phone: '083-456-7890' },
        ];
        setDetailData(mockDetailData);
      })
      .finally(() => {
        setLoading(false);
      });
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á GenericHomePage
  const handleTypeClick = (homeTypeName) => {
    navigate(`/homes?type=${encodeURIComponent(homeTypeName)}`);
  };

  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PieChart
  const dataHouseStatus = [
    { name: '‡∏ß‡πà‡∏≤‡∏á', value: houseStatus.vacant },
    { name: '‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏≠‡∏¢‡∏π‡πà', value: houseStatus.occupied },
  ];

  const handleLogout = () => {
    localStorage.removeItem("token");
    localStorage.removeItem("role_id");
    window.location.href = "/login";
  };

  return (
    <div className="dashboard-container" style={{ minHeight: "100vh", background: "#fafbff", padding: "0 0 64px 0", position: "relative" }}>
      <Navbar />
      
      {/* Floating Button ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏ß‡∏≤ */}
      <div style={{
        position: "fixed",
        top: "100px",
        right: "32px",
        zIndex: 50,
        borderRadius: "16px",
        boxShadow: "0 8px 32px rgba(0,0,0,0.15)",
        background: "#fff",
        border: "1px solid #e5e7eb",
        animation: "float 3s ease-in-out infinite"
      }}>
        <PDFDownload 
          typeStats={typeStats}
          houseStatus={houseStatus}
          detailData={detailData}
          reportType="comprehensive"
          disabled={loading}
        />
      </div>
      
      <div className="content-container" style={{ flex: 1, padding: 32 }}>
        <div style={{
          display: "flex", justifyContent: "center", marginTop: 24, marginBottom: 24,
        }}>
          <div style={{
            color: "#3b2566", 
            fontWeight: "bold", 
            fontSize: "35px",
            padding: "18px 48px", 
            borderRadius: "8px", 
            border: "6px solid #31c3e7",
            boxShadow: " 8px 8px 0 #2b2b3d",
            fontFamily: "'Press Start 2P', 'Courier New', monospace",
            letterSpacing: "2px", 
            userSelect: "none",
            display: "flex",
            alignItems: "center",
            gap: "12px",
            textAlign: "center",
            maxWidth: "90%",
          }}>
            ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏Å‡∏£‡∏°‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏´‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠
          </div>
        </div>
        
        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ */}
        <div style={{
          display: "flex",
          justifyContent: "center",
          gap: 24,
          marginTop: 32,
          marginBottom: 32
        }}>
          <div style={{
            background: "#fff",
            padding: "24px",
            borderRadius: "12px",
            boxShadow: "0 4px 12px rgba(0,0,0,0.1)",
            textAlign: "center",
            minWidth: "200px"
          }}>
            <h4 style={{ color: "#374151", margin: "0 0 8px 0" }}>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h4>
            <div style={{ fontSize: "32px", fontWeight: "bold", color: "#3b82f6" }}>
              {typeStats.length}
            </div>
          </div>
          <div style={{
            background: "#fff",
            padding: "24px",
            borderRadius: "12px",
            boxShadow: "0 4px 12px rgba(0,0,0,0.1)",
            textAlign: "center",
            minWidth: "200px"
          }}>
            <h4 style={{ color: "#374151", margin: "0 0 8px 0" }}>‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h4>
            <div style={{ fontSize: "32px", fontWeight: "bold", color: "#10b981" }}>
              {typeStats.reduce((sum, stat) => sum + stat.count, 0)}
            </div>
          </div>
        </div>
        
        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô - Dynamic */}
        <div style={{
          display: "flex", flexWrap: "wrap", justifyContent: "center", gap: 32,
          marginTop: 64, width: "96vw", marginLeft: 0, marginRight: 0,
        }}>
          {loading ? (
            <div style={{ color: "#19b0d9", fontWeight: "bold", fontSize: 18 }}>
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...
            </div>
          ) : typeStats.length === 0 ? (
            <div style={{ color: "#ef4444", fontWeight: "bold" }}>
              ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å
            </div>
          ) : (
            typeStats.map((homeType, index) => {
              const cardColors = getCardColor(homeType.type, index);
              
              return (
                <div
                  key={homeType.id}
                  className="type-card card-container"
                  style={{
                    border: `2px solid ${cardColors.border}`,
                    borderRadius: 18,
                    boxShadow: "0 4px 24px #e5e7eb",
                    width: 550,
                    padding: "46px 32px",
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    background: cardColors.bg,
                    cursor: "pointer",
                    transition: "transform 0.2s cubic-bezier(.4,2,.6,1), box-shadow 0.2s",
                    animationDelay: `${index * 0.1}s`
                  }}
                  onClick={() => handleTypeClick(homeType.type)}
                  onMouseEnter={e => {
                    e.currentTarget.style.transform = "translateY(-8px) scale(1.02)";
                    e.currentTarget.style.boxShadow = "0 20px 40px rgba(0,0,0,0.15)";
                    const icon = e.currentTarget.querySelector('.home-icon');
                    if (icon) {
                      icon.style.transform = "scale(1.1) rotate(5deg)";
                    }
                  }}
                  onMouseLeave={e => {
                    e.currentTarget.style.transform = "none";
                    e.currentTarget.style.boxShadow = "0 4px 24px #e5e7eb";
                    const icon = e.currentTarget.querySelector('.home-icon');
                    if (icon) {
                      icon.style.transform = "scale(1) rotate(0deg)";
                    }
                  }}
                >
                  {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô */}
                  <div 
                    className="home-icon"
                    style={{ 
                      fontSize: 64, 
                      marginBottom: 20,
                      transition: "transform 0.3s ease",
                      transform: "scale(1)"
                    }}
                  >
                    {getHomeTypeIcon(homeType.type)}
                  </div>
                  
                  {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó */}
                  <h3 style={{ 
                    color: cardColors.text, 
                    margin: "0 0 16px 0",
                    fontSize: 20,
                    fontWeight: "600",
                    textAlign: "center"
                  }}>
                    {homeType.type}
                  </h3>
                  
                  {/* ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ */}
                  {homeType.description && (
                    <p style={{
                      color: cardColors.text,
                      fontSize: 14,
                      margin: "0 0 12px 0",
                      textAlign: "center",
                      opacity: 0.8
                    }}>
                      {homeType.description}
                    </p>
                  )}
                  
                  {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡πâ‡∏≤‡∏ô */}
                  <div style={{ 
                    fontSize: 18, 
                    marginBottom: 12,
                    color: "#374151"
                  }}>
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡πâ‡∏≤‡∏ô: <b style={{ color: cardColors.text, fontSize: 20 }}>{homeType.count}</b> ‡∏´‡∏•‡∏±‡∏á
                  </div>
                                    
                  {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡∏¥‡∏Å */}
                  <div style={{ 
                    fontSize: 14, 
                    color: "#6b7280",
                    textAlign: "center",
                    lineHeight: 1.4,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    gap: 6,
                    marginTop: 8
                  }}>
                    <span>üëÅÔ∏è</span>
                    <div>
                      <div style={{ fontSize: 16, color: cardColors.text, fontWeight: "500" }}>
                        ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                      </div>
                      <div style={{ fontSize: 12, color: "#94a3b8" }}>
                        ‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏µ‡πâ
                      </div>
                    </div>
                  </div>
                </div>
              );
            })
          )}
        </div>

        {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô */}
        <div style={{
          display: "flex",
          justifyContent: "center",
          marginTop: 48,
          gap: 16
        }}>
          <button
            onClick={() => navigate("/addtype")}
            style={{
              background: "#3b82f6",
              color: "white",
              border: "none",
              padding: "12px 24px",
              borderRadius: "8px",
              fontSize: "16px",
              fontWeight: "500",
              cursor: "pointer",
              transition: "all 0.2s ease",
              boxShadow: "0 2px 8px rgba(59, 130, 246, 0.3)"
            }}
            onMouseEnter={e => {
              e.target.style.background = "#2563eb";
              e.target.style.transform = "translateY(-2px)";
            }}
            onMouseLeave={e => {
              e.target.style.background = "#3b82f6";
              e.target.style.transform = "translateY(0)";
            }}
          >
            ‚ûï ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô
          </button>
        </div>
      </div>
    </div>
  );
}
