import { useState, useEffect } from "react";
import axios from "axios";
import "../styles/home.css";
import "../styles/Sharestyles.css";
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import styles from '../styles/Addhome.module.css';

export default function AddHomeModal({ isOpen, onClose, onSuccess, homeTypeName }) {
  const [image, setImage] = useState(null);
  const [homeTypes, setHomeTypes] = useState([]);
  const [townhomeRows, setTownhomeRows] = useState([]);
  const [twinAreas, setTwinAreas] = useState([]);
  const [floors, setFloors] = useState([]);
  const [buildings, setBuildings] = useState([]);
  const [form, setForm] = useState({ 
    home_type_id: "", 
    Address: "",
    row_id: "",
    twin_area_id: "",
    floor_id: "",
    building_id: ""
  });
  const [amount, setAmount] = useState(1);
  const [startAddress, setStartAddress] = useState("");
  const [endAddress, setEndAddress] = useState("");
  const [loading, setLoading] = useState(false);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  useEffect(() => {
    if (isOpen) {
      loadInitialData();
    }
  }, [isOpen]);

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ home_type_id ‡∏ï‡∏≤‡∏° homeTypeName
  useEffect(() => {
    if (homeTypeName && homeTypes.length > 0) {
      const selectedType = homeTypes.find(ht => ht.name === homeTypeName);
      if (selectedType) {
        setForm(prev => ({ 
          ...prev, 
          home_type_id: selectedType.id,
          row_id: "",
          twin_area_id: ""
        }));
      }
    }
  }, [homeTypeName, homeTypes]);

  const loadInitialData = async () => {
    try {
      const [
        homeTypesRes,
        townhomeRowsRes,
        twinAreasRes,
        floorsRes,
        buildingsRes
      ] = await Promise.all([
        axios.get("http://localhost:3001/api/home-types"),
        axios.get("http://localhost:3001/api/townhome-rows"),
        axios.get("http://localhost:3001/api/twin-areas"),
        axios.get("http://localhost:3001/api/floors"),
        axios.get("http://localhost:3001/api/buildings")
      ]);
      
      setHomeTypes(homeTypesRes.data);
      setTownhomeRows(townhomeRowsRes.data);
      setTwinAreas(twinAreasRes.data);
      setFloors(floorsRes.data);
      setBuildings(buildingsRes.data);
      
    } catch (error) {
      console.error("Error loading initial data:", error);
      toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
    }
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    
    if (name === 'home_type_id') {
      setForm({ 
        ...form, 
        [name]: value,
        row_id: "",
        twin_area_id: ""
      });
    } else {
      setForm({ ...form, [name]: value });
    }
  };

  const handleImageChange = (e) => {
    setImage(e.target.files[0]);
  };

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô Addhome.jsx - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≥
  const checkDuplicateAddress = async (address, homeTypeId) => {
    try {
      const response = await axios.get(`http://localhost:3001/api/homes/check-address`, {
        params: { 
          address: address, 
          home_type_id: homeTypeId 
        }
      });
      return response.data.exists;
    } catch (error) {
      console.error("Error checking duplicate address:", error);
      return false;
    }
  };

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô Addhome.jsx - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≥‡∏Ç‡∏ì‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå
  const handleAddressChange = async (e) => {
    const { value } = e.target;
    setForm({ ...form, Address: value });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≥‡∏Ç‡∏ì‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏™‡∏£‡πá‡∏à 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    if (value && form.home_type_id) {
      clearTimeout(window.addressCheckTimeout);
      window.addressCheckTimeout = setTimeout(async () => {
        const isDuplicate = await checkDuplicateAddress(value, form.home_type_id);
        if (isDuplicate) {
          toast.warn(`‚ö†Ô∏è ‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô "${value}" ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`, {
            position: "top-right",
            autoClose: 2000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            style: { 
              background: 'linear-gradient(135deg, #f59e0b, #d97706)', 
              color: 'white',
              fontWeight: 'bold'
            }
          });
        }
      }, 1000);
    }
  };

  // ‡∏õ‡∏£‡∏±‡∏ö handleSubmit ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ bulk add ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);

    const selectedHomeType = homeTypes.find(ht => ht.id == form.home_type_id);

    try {
      const formData = new FormData();
      formData.append("home_type_id", form.home_type_id);
      formData.append("status", "2");
      if (selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß') {
        formData.append("row_id", form.row_id);
      }
      if (selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î') {
        formData.append("twin_area_id", form.twin_area_id);
      }
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á
      if (selectedHomeType?.name === '‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£') {
        formData.append("floor_id", form.floor_id);
      }
      if (selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á') {
        formData.append("building_id", form.building_id);
      }
      if (image) {
        formData.append("image", image);
      }
      formData.append("amount", amount);
      formData.append("startAddress", startAddress);
      formData.append("endAddress", endAddress);

      await axios.post("http://localhost:3001/api/homes/bulk", formData, {
        headers: { "Content-Type": "multipart/form-data" }
      });

      toast.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        style: { 
          background: 'linear-gradient(135deg, #ffffffff, #ffffffff)', 
          fontWeight: 'bold'
        }
      });
      setForm({ home_type_id: "", row_id: "", twin_area_id: "" });
      setImage(null);
      onSuccess();
      onClose();

    } catch (error) {
      console.error("Error:", error);
      
      let errorMessage = "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡πâ‡∏≤‡∏ô";
      let errorIcon = "‚ùå";
      
      if (error.response?.data?.message) {
        errorMessage = error.response.data.message;
      } else if (error.response?.status === 400) {
        errorMessage = "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á";
        errorIcon = "‚ö†Ô∏è";
      } else if (error.response?.status === 409) {
        errorMessage = "‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô";
        errorIcon = "üîÑ";
      }
      
      toast.error(`${errorIcon} ${errorMessage}`, {
        position: "top-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        style: { 
          background: 'linear-gradient(135deg, #ef4444, #dc2626)', 
          color: 'white',
          fontWeight: 'bold'
        }
      });
    } finally {
      setLoading(false);
    }
  };

  const handleClose = () => {
    setForm({ 
      home_type_id: "", 
      Address: "",
      row_id: "",
      twin_area_id: ""
    });
    setImage(null);
    onClose();
  };

  const getSelectedHomeType = () => {
    return homeTypes.find(ht => ht.id == form.home_type_id);
  };

  const selectedHomeType = getSelectedHomeType();

  if (!isOpen) return null;

  return (
    <div className="modal-overlay" >
      <div 
        className="modal-content" 
        onClick={(e) => e.stopPropagation()}
        style={{
          width: '800px',
          minWidth: '800px',
          maxWidth: '95vw',
          height: 'auto',
          maxHeight: '90vh'
        }}
      >
        <div 
          className="modal-header"
          style={{ padding: '20px 24px' }}
        >
          <h3 
            className="modal-title"
            style={{ fontSize: '1.4rem' }}
          >
            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å
          </h3>
          <button className="modal-close" onClick={handleClose}>√ó</button>
        </div>
        
        <div 
          className="modal-body"
          style={{ padding: '24px' }}
        >
          <form onSubmit={handleSubmit}>
            {/* ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß/‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà */}
            <div 
              style={{ 
                display: 'grid', 
                gridTemplateColumns: selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î' || selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß' ? '1fr 1fr' : '1fr', 
                gap: '20px',
                marginBottom: '20px' 
              }}
            >
              <div className="form-group">
                <label 
                  className="form-label"
                  style={{ 
                    fontSize: '14px',
                    marginBottom: '8px' 
                  }}
                >
                  ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô
                </label>
                <select
                  name="home_type_id"
                  value={form.home_type_id}
                  onChange={handleChange}
                  required
                  className="form-select"
                  disabled={!!homeTypeName}
                  style={{ 
                    padding: '12px 16px',
                    fontSize: '14px',
                    minHeight: '40px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    width: '100%'
                  }}
                >
                  <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô</option>
                  {homeTypes
                    .filter(ht => !ht.name.includes('‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà'))
                    .map(ht => (
                      <option key={ht.id} value={ht.id}>{ht.name}</option>
                    ))}
                </select>
              </div>
              
              {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î */}
              {selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î' && (
                <div className="form-group">
                  <label 
                    className="form-label"
                    style={{ fontSize: '14px', marginBottom: '8px' }}
                  >
                    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                  </label>
                  <select
                    name="twin_area_id"
                    value={form.twin_area_id}
                    onChange={handleChange}
                    required
                    className="form-select"
                    style={{ 
                      padding: '12px 16px',
                      fontSize: '14px',
                      minHeight: '40px',
                      border: '1px solid #d1d5db',
                      borderRadius: '6px',
                      width: '100%'
                    }}
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà</option>
                    {twinAreas.map(area => (
                      <option key={area.id} value={area.id}>{area.name}</option>
                    ))}
                  </select>
                </div>
              )}
              
              {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß */}
              {selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß' && (
                <div className="form-group">
                  <label 
                    className="form-label"
                    style={{ fontSize: '14px', marginBottom: '8px' }}
                  >
                    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß
                  </label>
                  <select
                    name="row_id"
                    value={form.row_id}
                    onChange={handleChange}
                    required
                    className="form-select"
                    style={{ 
                      padding: '12px 16px',
                      fontSize: '14px',
                      minHeight: '40px',
                      border: '1px solid #d1d5db',
                      borderRadius: '6px',
                      width: '100%'
                    }}
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß</option>
                    {townhomeRows.map(row => (
                      <option 
                        key={row.id} 
                        value={row.id}
                        disabled={row.home_count >= row.max_capacity}
                      >
                        {row.name} ({row.home_count}/{row.max_capacity})
                        {row.home_count >= row.max_capacity ? ' - ‡πÄ‡∏ï‡πá‡∏°' : ''}
                      </option>
                    ))}
                  </select>
                </div>
              )}

              {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£ */}
              {selectedHomeType?.name === '‡πÅ‡∏ü‡∏•‡∏ï‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£' && (
                <div className="form-group">
                  <label className="form-label" style={{ fontSize: '14px', marginBottom: '8px' }}>
                    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô
                  </label>
                  <select
                    name="floor_id"
                    value={form.floor_id}
                    onChange={handleChange}
                    required
                    className="form-select"
                    style={{ 
                      padding: '12px 16px',
                      fontSize: '14px',
                      minHeight: '40px',
                      border: '1px solid #d1d5db',
                      borderRadius: '6px',
                      width: '100%'
                    }}
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô</option>
                    {floors.map(floor => (
                      <option key={floor.id} value={floor.id}>{floor.name}</option>
                    ))}
                  </select>
                </div>
              )}

              {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á */}
              {selectedHomeType?.name === '‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á' && (
                <div className="form-group">
                  <label className="form-label" style={{ fontSize: '14px', marginBottom: '8px' }}>
                    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£
                  </label>
                  <select
                    name="building_id"
                    value={form.building_id}
                    onChange={handleChange}
                    required
                    className="form-select"
                    style={{ 
                      padding: '12px 16px',
                      fontSize: '14px',
                      minHeight: '40px',
                      border: '1px solid #d1d5db',
                      borderRadius: '6px',
                      width: '100%'
                    }}
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£</option>
                    {buildings.map(building => (
                      <option key={building.id} value={building.id}>{building.name}</option>
                    ))}
                  </select>
                </div>
              )}
            </div>
            

            {/* ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°, ‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô, ‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î */}
            <div 
              style={{ 
                display: 'grid', 
                gridTemplateColumns: '1fr 1fr 1fr', 
                gap: '20px',
                marginBottom: '20px' 
              }}
            >
              <div className="form-group">
                <label 
                  className="form-label"
                  style={{ fontSize: '14px', marginBottom: '8px' }}
                >
                  ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°
                </label>
                <input
                  type="number"
                  min="1"
                  value={amount}
                  onChange={e => setAmount(e.target.value)}
                  placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°"
                  className="form-input"
                  required
                  style={{ 
                    padding: '12px 16px',
                    fontSize: '14px',
                    minHeight: '40px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    width: '100%'
                  }}
                />
              </div>

              <div className="form-group">
                <label 
                  className="form-label"
                  style={{ fontSize: '14px', marginBottom: '8px' }}
                >
                  ‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                </label>
                <input
                  type="text"
                  value={startAddress}
                  onChange={e => setStartAddress(e.target.value)}
                  placeholder="‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"
                  className="form-input"
                  required
                  style={{ 
                    padding: '12px 16px',
                    fontSize: '14px',
                    minHeight: '40px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    width: '100%'
                  }}
                />
              </div>

              <div className="form-group">
                <label 
                  className="form-label"
                  style={{ fontSize: '14px', marginBottom: '8px' }}
                >
                  ‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
                </label>
                <input
                  type="text"
                  value={endAddress}
                  onChange={e => setEndAddress(e.target.value)}
                  placeholder="‡πÄ‡∏•‡∏Ç‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î"
                  className="form-input"
                  required
                  style={{ 
                    padding: '12px 16px',
                    fontSize: '14px',
                    minHeight: '40px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    width: '100%'
                  }}
                />
              </div>
            </div>

            {/* ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á - ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
            <div 
              style={{ 
                display: 'grid', 
                gridTemplateColumns: '1fr 1fr', 
                gap: '20px',
                marginBottom: '20px' 
              }}
            >
              <div className="form-group">
                <label 
                  className="form-label"
                  style={{ fontSize: '14px', marginBottom: '8px' }}
                >
                  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏†‡∏≤‡∏û
                </label>
                <input
                  type="file"
                  accept="image/*"
                  onChange={handleImageChange}
                  className="form-file"
                  style={{ 
                    padding: '12px',
                    fontSize: '14px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    width: '100%'
                  }}
                />
              </div>
            </div>

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á */}
            {image && (
              <div style={{ marginBottom: '20px', textAlign: 'center' }}>
                <img 
                  src={URL.createObjectURL(image)}
                  alt="preview"
                  className="image-preview"
                  style={{ 
                    maxWidth: '200px', 
                    maxHeight: '200px', 
                    borderRadius: '8px',
                    border: '2px solid #e5e7eb'
                  }}
                />
              </div>
            )}

            <div 
              className="modal-actions"
              style={{ 
                marginTop: '24px',
                gap: '12px',
                display: 'flex',
                justifyContent: 'flex-end'
              }}
            >
              <button 
                type="button" 
                onClick={handleClose} 
                className="btn-secondary"
                disabled={loading}
                style={{
                  padding: '10px 20px',
                  fontSize: '14px',
                  minWidth: '80px',
                  borderRadius: '6px',
                  color:'grey'
                }}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button 
                type="submit" 
                className="btn-primary"
                disabled={loading}
                style={{
                  padding: '10px 20px',
                  fontSize: '14px',
                  minWidth: '80px',
                  borderRadius: '6px'
                }}
              >
                {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}